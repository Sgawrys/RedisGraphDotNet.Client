trigger:
- master
- release/*

pool:
  vmImage: 'ubuntu-latest'

# do this before all your .NET Core tasks
steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.104' # replace this value with the version that you need for your project

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration Release --filter TestCategory=Unit'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/RedisGraphDotNet.Client.csproj'
    versioningScheme: 'off'

- task: NuGetCommand@2
  displayName: 'Publish to Nuget.org'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'RedisGraphDotNetNuGetConnection'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'd7a6f02b-63a2-4bfb-a72e-78ec5b5ba4ea'